<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyy.dao.RecruitMapper">
    <resultMap id="BaseResultMap" type="com.zyy.entity.Recruits">
        <id column="recruitId" jdbcType="VARCHAR" property="recruitId" />
        <result column="companyId" jdbcType="VARCHAR" property="companyId" />
        <result column="career" jdbcType="VARCHAR" property="career" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="message" jdbcType="VARCHAR" property="message" />
        <result column="salary" jdbcType="INTEGER" property="salary" />
        <result column="freefl" jdbcType="TINYINT" property="freefl" />
        <result column="inform" jdbcType="VARCHAR" property="inform" />
    </resultMap>

    <insert id="sendRecruit" parameterType="com.zyy.entity.Recruits">
        insert into recruit(recruitId, companyid, career, type,number, message, salary, freefl, inform)
                    value (#{recruitId},#{companyId},#{career},#{type},#{number},#{message},#{salary},#{freefl},#{inform})
    </insert>
    
    <delete id="deleteByRecruitIdAndCompanyId" parameterType="string">
        delete from recruit where recruitId=#{recruitId} and companyId=#{companyId}
    </delete>

    <update id="updateByRecruitIdAndCompanyId" parameterType="string">
        update recruit SET career=#{career},type=#{type},number=#{number},message=#{message},salary=#{salary},#{freefl}=#{freefl},#{inform}=#{inform}
                        where recruitId=#{recruitId} and companyId=#{companyId}
    </update>

    <select id="selectByRecruitIdAndCompanyId" resultMap="BaseResultMap">
        select * from recruit where recruitId=#{recruitId} and companyId=#{companyId}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select * from recruit
    </select>

    <select id="selectRecruitNum" parameterType="string" resultType="java.lang.Integer">
        select count(*) from recruit
    </select>

    <select id="selectAllByType" resultMap="BaseResultMap">
        select * from recruit where type=#{type}
    </select>

    <select id="selectRecruitNumByType" parameterType="string" resultType="java.lang.Integer">
        select count(*) from recruit where type=#{type}
    </select>

</mapper>